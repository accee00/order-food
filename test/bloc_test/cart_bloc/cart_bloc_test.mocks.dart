// Mocks generated by Mockito 5.4.6 from annotations
// in order_food/test/bloc_test/cart_bloc/cart_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:order_food/features/cart/model/cart_model.dart' as _i4;
import 'package:order_food/repository/cart_repo.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i2.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double get subtotal =>
      (super.noSuchMethod(Invocation.getter(#subtotal), returnValue: 0.0)
          as double);

  @override
  double get deliveryFee =>
      (super.noSuchMethod(Invocation.getter(#deliveryFee), returnValue: 0.0)
          as double);

  @override
  double get tax =>
      (super.noSuchMethod(Invocation.getter(#tax), returnValue: 0.0) as double);

  @override
  double get total =>
      (super.noSuchMethod(Invocation.getter(#total), returnValue: 0.0)
          as double);

  @override
  _i3.Future<List<_i4.CartItem>> getCartItems() =>
      (super.noSuchMethod(
            Invocation.method(#getCartItems, []),
            returnValue: _i3.Future<List<_i4.CartItem>>.value(<_i4.CartItem>[]),
          )
          as _i3.Future<List<_i4.CartItem>>);

  @override
  _i3.Future<void> addItem(_i4.CartItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#addItem, [item]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updateItem(_i4.CartItem? item) =>
      (super.noSuchMethod(
            Invocation.method(#updateItem, [item]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeItem(String? menuItemId, String? restaurantId) =>
      (super.noSuchMethod(
            Invocation.method(#removeItem, [menuItemId, restaurantId]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> clearCart() =>
      (super.noSuchMethod(
            Invocation.method(#clearCart, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
